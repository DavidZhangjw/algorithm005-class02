class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {

        if (obstacleGrid.length == 0){
            return 0;
        }
        int m = obstacleGrid.length - 1;
        int n = obstacleGrid[0].length - 1;
        if(obstacleGrid[m][n] == 1){
            return 0;
        }
        obstacleGrid[m][n] = 1;
        for (int i = n - 1;i >= 0; i --){
            obstacleGrid[m][i] = obstacleGrid[m][i] == 1?0:obstacleGrid[m][i + 1];
        }
        for(int i = m - 1; i >= 0;i --){
            obstacleGrid[i][n] = obstacleGrid[i][n] == 1?0 : obstacleGrid[i + 1][n];
        }

        

        

        for (int i = m - 1; i >= 0; i --){
            for (int j = n - 1;j >= 0; j --){
                if(obstacleGrid[i][j] == 1){
                    obstacleGrid[i][j] = 0;
                }else{
                    obstacleGrid[i][j] = obstacleGrid[i][j + 1] + obstacleGrid[i + 1][j];
                }
            }
        }

        return obstacleGrid[0][0];
    }
}