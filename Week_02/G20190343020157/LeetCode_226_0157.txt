/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    //执行用时 :0 ms, 在所有 java 提交中击败了100.00%的用户内存消耗 :34.3 MB, 在所有 java 提交中击败了39.30%的用户
    public TreeNode invertTree(TreeNode node) {
        //使用递归
        if (node == null) return null;
        invertTree(node.left);
        invertTree(node.right);
        TreeNode tempNode = null;
        if (node.left != null && node.right != null){
            tempNode = node.left;
            node.left = node.right;
            node.right =tempNode;
        }else if (node.left != null){
            node.right = node.left;
            node.left = null;
        }else if(node.right != null){
            node.left = node.right;
            node.right = null;
        }

        return node; 
    }
}